spring.datasource.url=jdbc:postgresql://localhost:5432/fjchanataxi
spring.datasource.username=postgres
spring.datasource.password=labcom,2015

 

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

 
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true




































#select e from Estudiantee where e-genero = :datoGenero

#select NEW com. example.demo-modelo.dto.EstudianteDTO(e-cedula,e-nombre,e-apellido,e-genero)
#fromEstudianteewheree.nombre-edatoNombre

#DELETE FROM Estudiante e where e.apellido = :datoApellido

#UPDATE Estudiante e set e.nombre = â€¢datoNombre where e. apellido = :datoApellido

#SELECT h FROM Hotel h INNER JOIN h.habitaciones ha WHERE ha tipoHabitacion = :datoTipo

#SELECT h FROM Hotel h JOIN FETCH h. habitaciones ha WHERE ha tipoHabitacion - edatoTipo"


	#@Override
	#public List<Estudiante> buscarPorNombreCriteriaAndOr(String nombre, String apellido, String genero) {
	#	// TODO Auto-generated method stub
	#	CriteriaBuilder myBuilder = this.entityManager.getCriteriaBuilder();

	#	// Especificamos el tipo de retorno de mi query
	#	Criturn mySQL.getResultList();
	#}
